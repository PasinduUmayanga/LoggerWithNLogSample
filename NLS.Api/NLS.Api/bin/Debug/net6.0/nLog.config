<?xml version="1.0" encoding="utf-8"?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  autoReload="true"
  internalLogLevel="Info"
  internalLogFile="c:\temp\internal-nlog-AspNetCore.txt">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore" />
  </extensions>

  <!-- the targets to write to -->
  <targets>
    <!-- File Target for all log messages with basic details -->
    <target xsi:type="File" name="allfile" fileName="c:\temp\nlog-AspNetCore-all-${shortdate}.log"
      layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />

    <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
    <target xsi:type="File" name="ownFile-web"
      fileName="c:\temp\nlog-AspNetCore-own-${shortdate}.log"
      layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}" />

    <!--Console
    Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
    <target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />

    <target name="ErrorLoggerLogfile"
      xsi:type="File"
      fileName="${basedir}\logs\Error\ErrorLog.log"
      layout="[${pad:padding=-5:inner=${level:uppercase=true}}] ${longdate:universalTime=false} ${pad:padding=4:inner=${threadid}} ${logger} ${callsite} ${when:when='${message}' != '':inner=\: ${message}} ${newline:when='${exception}' != ''} ${exception:format=toString,Data:exceptionDataSeparator=\r\n}"
      archiveNumbering="DateAndSequence"
      archiveEvery="Day"
      archiveAboveSize="10485760"
      archiveDateFormat="yyyy-MM-dd"
      maxArchiveFiles="100"
      keepFileOpen="true"
    />

    <target name="OperationalLoggerLogfile"
      xsi:type="File"
      fileName="${basedir}\logs\Operational\OperationalLog.log"
      layout="${longdate:universalTime=false} ${pad:padding=4:inner=${threadid}} [${pad:padding=-5:inner=${level:uppercase=true}}] ${when:when='${message}' != '':inner=\: ${message}}${newline:when='${exception}' != ''}${exception:format=toString,Data:exceptionDataSeparator=\r\n}"
      archiveNumbering="DateAndSequence"
      archiveEvery="Day"
      archiveAboveSize="10485760"
      archiveDateFormat="yyyy-MM-dd"
      maxArchiveFiles="100"
      keepFileOpen="true"
    />

    <target xsi:type="Database"
      name="dbTarget"
      connectionString="Data Source=LKH2VSDB01.h2lk.local;Initial Catalog=PUM_NLOG;user id=sa;password=Password$;"
      commandText="INSERT INTO OperationalLogs(CreatedOn,Message,Level,Exception,StackTrace,Logger,Url) VALUES (@datetime,@msg,@level,@exception,@trace,@logger,@url)">
      <parameter name="@datetime" layout="${date}" />
      <parameter name="@msg" layout="${message}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@exception" layout="${exception}" />
      <parameter name="@trace" layout="${stacktrace}" />
      <parameter name="@logger" layout="${logger}" />
      <parameter name="@url" layout="${aspnet-request-url}" />
    </target>
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All
    logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allfile" />

    <!--Output
    hosting lifetime messages to console target for faster startup detection -->
    <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web"
      final="true" />

    <!--Skip
    non-critical Microsoft logs and so log only own logs (BlackHole) -->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info" final="true" />
    <logger name="*" minlevel="Trace" writeTo="ownFile-web" />
    <logger name="ErrorLogger" minLevel="Error" writeTo="ErrorLoggerLogfile" final="true" />
    <logger name="OperationalLogger" minLevel="Info" writeTo="OperationalLoggerLogfile" final="true" />
    <logger name="*" minlevel="Trace" writeTo="dbTarget" />
  </rules>
</nlog>